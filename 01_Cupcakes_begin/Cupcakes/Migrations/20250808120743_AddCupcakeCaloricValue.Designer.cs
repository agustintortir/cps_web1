// <auto-generated />
using System;
using Cupcakes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cupcakes.Migrations
{
    [DbContext(typeof(CupcakeContext))]
    [Migration("20250808120743_AddCupcakeCaloricValue")]
    partial class AddCupcakeCaloricValue
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cupcakes.Models.Bakery", b =>
                {
                    b.Property<int>("BakeryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasMaxLength(50);

                    b.Property<string>("BakeryName")
                        .HasMaxLength(50);

                    b.Property<int>("Quantity");

                    b.HasKey("BakeryId");

                    b.ToTable("Bakerys");

                    b.HasData(
                        new
                        {
                            BakeryId = 1,
                            Adress = "635 Brighton",
                            BakeryName = "Gluteus Free",
                            Quantity = 8
                        },
                        new
                        {
                            BakeryId = 2,
                            Adress = "544 Haw",
                            BakeryName = "Cupcakes Free",
                            Quantity = 22
                        },
                        new
                        {
                            BakeryId = 3,
                            Adress = "232 as",
                            BakeryName = "Sugar Free",
                            Quantity = 30
                        },
                        new
                        {
                            BakeryId = 4,
                            Adress = "223 fsa",
                            BakeryName = "Charles Street",
                            Quantity = 18
                        });
                });

            modelBuilder.Entity("Cupcakes.Models.Cupcake", b =>
                {
                    b.Property<int>("CupcakeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BakeryId")
                        .IsRequired();

                    b.Property<int>("CaloricValue");

                    b.Property<int>("CupcakeType");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("GlutenFree");

                    b.Property<string>("ImageMimeType");

                    b.Property<string>("ImageName");

                    b.Property<byte[]>("PhotoFile");

                    b.Property<double?>("Price")
                        .IsRequired();

                    b.HasKey("CupcakeId");

                    b.HasIndex("BakeryId");

                    b.ToTable("Cupcakes");

                    b.HasData(
                        new
                        {
                            CupcakeId = 1,
                            BakeryId = 1,
                            CaloricValue = 355,
                            CupcakeType = 0,
                            Description = "Vanilla cupcake with choco cream",
                            GlutenFree = true,
                            ImageMimeType = "image/jpeg",
                            ImageName = "turquesa-cupcake.jpg",
                            Price = 2.5
                        },
                        new
                        {
                            CupcakeId = 2,
                            BakeryId = 2,
                            CaloricValue = 195,
                            CupcakeType = 2,
                            Description = "Chocolate cupcake with butter cream",
                            GlutenFree = false,
                            ImageMimeType = "image/jpeg",
                            ImageName = "chocolate-cupcake.jpg",
                            Price = 3.2000000000000002
                        },
                        new
                        {
                            CupcakeId = 3,
                            BakeryId = 3,
                            CaloricValue = 295,
                            CupcakeType = 3,
                            Description = "Strawberry cupcake with chocolate",
                            GlutenFree = true,
                            ImageMimeType = "image/jpeg",
                            ImageName = "pink-cupcake.jpg",
                            Price = 4.0
                        });
                });

            modelBuilder.Entity("Cupcakes.Models.Cupcake", b =>
                {
                    b.HasOne("Cupcakes.Models.Bakery", "bakery")
                        .WithMany("Cupcakes")
                        .HasForeignKey("BakeryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
